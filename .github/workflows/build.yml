name: Build image

on:
  workflow_call:
    outputs:
      image:
        description: ID of the image created by the workflow run
        value: ${{ jobs.merge.outputs.image }}

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    outputs:
      image-digest-arm: ${{ steps.gen-output.outputs.image-digest-arm64 }}
      image-digest-x64: ${{ steps.gen-output.outputs.image-digest-x64 }}
      build-tag: ${{ steps.build-meta.outputs.tags }}
    strategy:
      fail-fast: false
      matrix:
        runner:
          - ubuntu-24.04
          - ubuntu-24.04-arm
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: build-meta
        name: Docker meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: type=sha,suffix=-build-${{ github.run_id }}_${{ github.run_attempt }}

      # Build cache is shared among all builds of the same architecture
      - id: cache-meta
        name: Docker meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: type=raw,value=buildcache-${{ runner.arch }}

      - id: get-registry
        name: Get the sanitized registry name
        run: |
          echo "registry=$(echo '${{ steps.build-meta.outputs.tags }}' | cut -f1 -d:)" | tee -a "$GITHUB_OUTPUT"

      - id: build
        name: Build/push the arch-specific image
        uses: docker/build-push-action@v6
        with:
          cache-from: type=registry,ref=${{ steps.cache-meta.outputs.tags }}
          cache-to: type=registry,ref=${{ steps.cache-meta.outputs.tags }},mode=max
          labels: ${{ steps.build-meta.outputs.labels }}
          provenance: mode=max
          sbom: true
          tags: ${{ steps.get-registry.outputs.registry }}
          outputs: type=image,push-by-digest=true,push=true

      - id: gen-output
        name: Write arch-specific image digest to outputs
        run: |
          echo "image-digest-${RUNNER_ARCH,,}=${{ steps.get-registry.outputs.registry }}@${{ steps.build.outputs.digest }}" | tee -a "$GITHUB_OUTPUT"

  merge:
    name: create multi-platform image
    needs: build
    runs-on: ubuntu-24.04
    env:
      DOCKER_APP_IMAGE: ${{ needs.build.outputs.build-tag }}
      DOCKER_APP_IMAGE_DIGEST_ARM64: ${{ needs.build.outputs.image-digest-arm }}
      DOCKER_APP_IMAGE_DIGEST_X64: ${{ needs.build.outputs.image-digest-x64 }}
    outputs:
      image: ${{ needs.build.outputs.build-tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push the multi-platform image
        run: |
          docker buildx imagetools create \
            --tag "$DOCKER_APP_IMAGE" \
            "$DOCKER_APP_IMAGE_DIGEST_ARM64" "$DOCKER_APP_IMAGE_DIGEST_X64"
